package lesson_17;

/**
 * @author Sergey Bugaenko
 * {@code @date} 06.05.2025
 */



public class WhileExample {
    public static void main(String[] args) {

        /*
        Цикл - это повторение определенных действий до тех пор,
        пока не будет достигнуто какое-то условие или цель

        Цикл while повторяет выполнение блока кода до тех пор,
        пока заданное условие является истинным

        while (условие) {
            // Тело цикла
            // Код, который будет повторяться
        }

        - условие - выражение, которое возвращает true или false
        - Блок кода внутри {} - тело цикла, которое выполняется пока условие истинное

        Предикат - условие вычисляется перед каждой итерацией цикла
         */


        // Вывести на экран числа от 1 до 5 включительно
        int i = 1; // Инициализирую переменную счетчик цикла начальным значением

        while (i <= 5) {
            System.out.print(i + ", ");
            i++; // i = i + 1;
        }

        System.out.println();

        System.out.println("Продолжение программы");

        // Распечатать числа от 100 до 90 включительно в порядке убывания
        i = 100;

        while (i >= 90) {
            System.out.print(i-- + ", ");
//            i--; // i = i - 1;
        }
        System.out.println();
        System.out.println("=================\n");

        // Задача. Найти сумму чисел от 1 до 100

        /*
        1. Перебрать все числа от 1 до 100 - цикл
        2. Каждое число добавить в какую-то аккумулирующую (накапливающую сумму) переменную.
        3. После окончания цикла вынести значение
         */

        i = 1;
        int sum = 0;

        while (i <= 100) {
            sum += i; // sum = sum + i;
            i++;
        }

        System.out.println("Сумма чисел: " + sum);

        System.out.println("================\n");

        // Вывести на экран все четные числа в диапазоне от 1 до 21 не включительно

        /*
        1. Запустить перебор чисел от 1 до 21 - цикл
        2. Проверить каждое (текущее в цикле) число на четность. Остаток от деления равен 0 - тогда число четное
            - Если число четное - распечатать его
            - Иначе - никаких действий с этим числом не требуется
        3. Взять следующее число (новая итерация цикла)

         */

        i = 1;
        while (i <= 21) {
            System.out.println("Текущее число, которое мы проверяем: " + i);
            // Проверяем текущее число на четность
            if (i % 2 == 0) {
                System.out.println(i + ", ");
                i++; // добавляем +1 к четному, чтобы цикл перебирал только четные числа
            }
            i++;
        }

        System.out.println();

        System.out.println("================\n");
        String str = "Hello";

        // Распечатать каждый символ этой строки в отдельной строчке

        /*
        1. Нужно перебрать в цикле все индексы символов в этой строке
        2. Минимальный индекс 0, максимальный индекс len - 1
        3. Взять символ по текущему индексу. Вывести в консоль
        4. Повторить со следующим индексом
         */
        // 5 ;0 ->  i <= 4 -> 0...4
        // 5; 0 0 -> i < 5 -> 0...4

        i = 0;
//        while (i <= str.length() - 1) {
        while (i < str.length()) {
            char ch = str.charAt(i);
            System.out.println(ch);
            i++;
        }

        System.out.println("================\n");

        // Тоже самое, но компактная запись


        // Засекаем время работы кусочка кода в миллисекундах
        long start = System.currentTimeMillis();

        i = 0;
        while (i < str.length()) {
            System.out.println(str.charAt(i++));
        }

        long end = System.currentTimeMillis();

        System.out.println("Прошло: " + (end - start));
        System.out.println("start: " + start + " end: " + end);



    }
}
