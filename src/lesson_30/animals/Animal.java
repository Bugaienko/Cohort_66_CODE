package lesson_30.animals;

/**
 * @author Sergey Bugaenko
 * {@code @date} 27.05.2025
 */

/*
В Java проявляется в двух основных формах:

- Статический (компиляционный) полиморфизм - реализуется он с помощью перегрузки методов (Method Overloading)

- Динамический (исполнительный) полиморфизм - реализуется через переопределение методов (Method Overriding)

Переопределение позволяет подклассам (наследникам) изменить поведение методов родительского класса.

Переопределение метода происходит, когда наследник (подкласс) предоставляет свою специфическую реализацию метода,
который уже определен в родительском классе (супер-класс)

 */

// Класс Object является родителем ВСЕХ классов в Java,
// если явно не указан другой родитель

// Это обеспечивает базовую (одинаковую) функциональность для ВСЕХ объектов в Java


/*
У всех классов есть родитель Object ->
у объекта любого класса есть метод toString (полученный от Object)
-> когда мы передает ссылку на объект в место, где она должна быть преобразована в Строку
(или конкатенация, или sout)
у объекта автоматически будет вызван метод toString();


 */

public class Animal {

    public void voice() {
        System.out.println("Animal say something");
    }

    // Переопределение метода родителя
    @Override
    public String toString() {
       return "Animal toString";
    }
}
